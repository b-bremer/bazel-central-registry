load("@rules_foreign_cc//foreign_cc:make.bzl", "make")
load("@rules_license//rules:license.bzl", "license")

package(
    default_applicable_licenses = [":package_license"],
    default_visibility = ["//visibility:public"],
)

license(
    name = "package_license",
    package_name = "etherlab-ethercat-master",
)

# GNU General Public License
licenses(["restricted"])

exports_files(["LICENSE"])

# TODO(halbrock): remove
# # Userspace library to communicate with the EtherCAT main device.
# # The kernel-space module is not imported into bcr as it
# # needs to be compiled and installed on each computer separately.
# cc_library(
#     name = "ethercat_lib",
#     srcs = glob(
#         [
#             "lib/*.h",
#             "lib/*.c",
#         ],
#     ) + [
#         "config.h",  # Autogenerated.
#         "globals.h",
#         "master/globals.h",
#         "master/ioctl.h",
#     ],
#     hdrs = [
#         "include/ecrt.h",
#     ],
#     alwayslink = True,
# )

filegroup(
    name = "all",
    srcs = glob(["**"]),
)

# https://bazel-contrib.github.io/rules_foreign_cc/configure_make.html
make(
    name = "lib_and_tool",
    # configure_options = ["--enable-kernel=no"],
    lib_source = ":all",
    lib_name = "ethercat", # libethercat.a
    out_binaries = ["ethercat"],
)

filegroup(
    name = "ethercat_tool_file",
    srcs = [":lib_and_tool"],
    output_group = "ethercat", # The name matches the binary in out_binaries
    visibility = ["//visibility:public"],
)

sh_binary(
    name = "ethercat_tool",
    srcs = [":ethercat_tool_file"],
    visibility = ["//visibility:public"],
)